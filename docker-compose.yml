version: '3.8'

services:
  api:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./results:/app/results
      - ./logs:/app/logs
      - ./monitoring:/app/monitoring
    restart: unless-stopped
    environment:
      - MODEL_PATH=/app/results/best_model.pkl
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  monitoring:
    build:
      context: .
    command: python src/scripts/model_monitoring.py
    volumes:
      - ./results:/app/results
      - ./data:/app/data
      - ./monitoring:/app/monitoring
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - API_URL=http://api:8000

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
